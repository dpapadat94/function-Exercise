//Exercise 1 solution:

function printOdds(count) {
  for (i = 1; i < count; i++) {
    if (i % 2 == 0) {
      continue;
    } else {
      console.log(i);
    }
  }
}
//Exercise 2 solution:
function checkAge(userName, age) {
  let aboveSixteen = `Congrats ${userName}, you can drive!`;
  let belowSixteen = `Sorry ${userName}, but you need to wait until you're 16.`;
  if (age >= 16) {
    console.log(aboveSixteen);
  } else {
    console.log(belowSixteen);
  }
}
//Exercise 3 solution:
function whichQuadrant(x, y) {
  if (x > 0 && y > 0) {
    console.log("Your point is in quadrant 1");
  } else if (x > 0 && y < 0) {
    console.log("Your point is in quadrant 4");
  } else if (x < 0 && y > 0) {
    console.log("Your point is in quadrant 2");
  } else if (x < 0 && y < 0) {
    console.log("Your point is in quadrant 2");
  } else {
    console.log("Your point is the origin");
  }
}
//Exersice 4 solution
function isvalidTriangle(a, b, c) {
  return a + b > c || a + c > b || b + c > a;
}

function checkTriangle(a, b, c) {
  let isValid = isvalidTriangle(a, b, c);
  if (isValid) {
    if (a == b && b == c) {
      return `equalatiral`;
    } else if (a == b || b == c || a == c) {
      return `isosceles`;
    } else {
      return `scalene`;
    }
  } else {
    return `not a valid triangle`;
  }
}
// Exercise 5 solution:

function dataPlanStatus(planLimit, day, usage) {
  let periodLength = 30;
  let currentAvg = usage / day;
  let projectedAvg = planLimit / periodLength;
  let remainingDays = planLimit - usage;
  let projectedUsage = remainingDays * currentAvg;
  let statusMsg;

  console.log(`${day} day(s) used, ${periodLength - day} day(s) remaning`);
  console.log(`average projected use: ${projectedAvg} GB/per day`);

  if (currentAvg > projectedAvg) {
    statusMsg = "exceededing";
  } else if (currentAvg < projectedAvg) {
    statusMsg = "under";
  } else {
    statusMsg = "At";
  }

  console.log(
    `you are ${statusMsg} your avg daily use (${currentAvg} GB/day), continuing this usage, youll end up using ${
      planLimit - (usage + projectedUsage)
    } GB from your data limit.`
  );
}
